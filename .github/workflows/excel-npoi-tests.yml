# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Excel - Npoi Tests
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zeshue/aspnet9-jammy-ffmpeg:1.0.2
      credentials:
        username: zeshue
        password: ${{ secrets.docker_hub_password }}

    steps:
      - uses: actions/checkout@v4

      - name: Get Curl
        run: apt-get update && apt-get install -y curl

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Excel.Npoi.Tests

      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Excel.Npoi.Tests

      - name: Test
        run: dotnet test --verbosity normal -p:TestTfmsInParallel=false --collect:"XPlat Code Coverage" --results-directory ./coverage # Change this to run inside each .csproj file with separate actions
        working-directory: ./Excel.Npoi.Tests

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: Excel.Npoi.Tests/coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: false #true // If true, fails the build when falling below a certain percentage of code coverage
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"

      # - name: Add Coverage PR Comment
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   if: github.event_name == 'pull_request'
      #   with:
      #     append: true #Appends instead of overwrites the comment
      #     recreate: true
      #     path: code-coverage-results.md
